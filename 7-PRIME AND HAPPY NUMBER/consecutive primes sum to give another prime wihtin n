Consecutive Prime Sum
Some prime numbers can be expressed as Sum of other consecutive prime numbers.
For example
5 = 2 + 3
17 = 2 + 3 + 5 + 7
41 = 2 + 3 + 5 + 7 + 11 + 13
Your task is to find out how many prime numbers which satisfy this property are present in the 
range 3 to N subject to a constraint that summation should always start with number 2.
Write code to find out number of prime numbers that satisfy the above mentioned property in 
a given range.
Input Format:
First line of input contains k - the number of inputs
The next k lines contains a number N.
Output Format:
Print the total number of all such prime numbers which are less than or equal to N.
Example:
Input:
k = 2
N = 20
N = 15
Output:
2 (there are 2 such numbers: 5 and 17)
1

SOLUTION:
 // consecutive prime sum to give another prime within n

#include<stdio.h>
#include<math.h>

int isprime(int n)
{
    if(n==0||n==1)
    return 0;
    for(int i=2;i<=sqrt(n);i++)
    {
        if(n%i==0)
        return 0;
    }
    return 1;
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t>0)
    {
        int n,x=0,count=0;
        scanf("%d",&n);
        int p[n];
        for(int i=1;i<=n;i++)
        {
            if(isprime(i))
            {
                p[x]=i;
                x++;
            }
        }
        int sum=p[0], z=1;
        while(z<x)
        {
            sum+=p[z];
            if(isprime(sum)&&sum<=n)
            {
                count++;
                
            }
            z++;
        }
        t--;
        printf("%d",count);
    }
    
}
